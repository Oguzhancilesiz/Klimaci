@using Klimaci.Core.Paging
@using Klimaci.Entity
@model PagedResult<AppUser>
@{
    ViewData["Title"] = "Kullanıcılar";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="container py-3">
    <h1 class="mb-3">Kullanıcılar</h1>
    @await Html.PartialAsync("~/Areas/Admin/Views/Shared/_AdminAlerts.cshtml")

    <form method="get" class="row g-2 mb-3">
        <div class="col-md-5"><input name="search" class="form-control" value="@Context.Request.Query["search"]" placeholder="Ara (kullanıcı / e-posta)" /></div>
        <div class="col-md-3">
            <select class="form-select" name="sortBy">
                <option value="">Sırala (KullanıcıAdı)</option>
                <option value="createddate" selected="@(Context.Request.Query["sortBy"]=="createddate")">Oluşturma</option>
            </select>
        </div>
        <div class="col-md-2">
            <select class="form-select" name="desc">
                <option value="false" selected="@(Context.Request.Query["desc"]=="false")">Artan</option>
                <option value="true" selected="@(Context.Request.Query["desc"]=="true")">Azalan</option>
            </select>
        </div>
        <div class="col-md-2 d-grid"><button class="btn btn-primary">Filtrele</button></div>
    </form>

    <div class="d-flex mb-2"><a class="btn btn-success ms-auto" asp-action="Create">Yeni Kullanıcı</a></div>

    <table class="table table-striped align-middle">
        <thead><tr><th>Kullanıcı</th><th>E-posta</th><th>Durum</th><th class="text-end" style="width:220px">İşlem</th></tr></thead>
        <tbody>
            @foreach (var u in Model.Items)
            {
                var active = u.LockoutEnd is null;
                <tr>
                    <td>@u.UserName</td>
                    <td>@u.Email</td>
                    <td>
                        <span class="badge @(active?"bg-success":"bg-secondary")">@(active ? "Aktif" : "Kilitli")</span>
                    </td>
                    <td class="text-end">
                        <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@u.Id">Düzenle</a>
                        <a class="btn btn-sm btn-outline-dark" asp-action="Roles" asp-route-id="@u.Id">Roller</a>
                        <button class="btn btn-sm btn-outline-warning" onclick="toggle('@u.Id','@(!active)')">
                            @(active ? "Kilitle" : "Aktifleştir")
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var totalPages = (int)Math.Ceiling((double)Model.Total / Model.PageSize);
        var page = Model.Page;
    }
    <nav class="mt-3">
        <ul class="pagination">
            @for (int p = 1; p <= totalPages; p++)
            {
                <li class="page-item @(p==page?"active":"")">
                    <a class="page-link" href="?page=@p&pageSize=@Model.PageSize&search=@Context.Request.Query["search"]">@p</a>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        async function toggle(id, isActive){
          await fetch('@Url.Action("ToggleActive")',{method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id:id, isActive:isActive === 'True' })});
          location.reload();
        }
    </script>
}
