
@using Klimaci.Core.Paging
@using Klimaci.Entity
@model PagedResult<ServiceItem>
@{
    ViewData["Title"] = "Hizmetler";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container py-3">
    <h1 class="mb-3">Hizmetler</h1>
    @await Html.PartialAsync("~/Areas/Admin/Views/Shared/_AdminAlerts.cshtml")

    <form method="get" class="row g-2 mb-3">
        <div class="col-md-4">
            <input class="form-control" type="text" name="Search" value="@Context.Request.Query["Search"]" placeholder="Ara (başlık)" />
        </div>
        <div class="col-md-3">
            <select class="form-select" name="OnlyPublished">
                <option value="">Yayın durumu (Hepsi)</option>
                <option value="true" selected="@(Context.Request.Query["OnlyPublished"]=="true")">Yayında</option>
                <option value="false" selected="@(Context.Request.Query["OnlyPublished"]=="false")">Taslak</option>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" name="SortBy">
                <option value="">Sırala (Başlık)</option>
                <option value="createddate">Oluşturma</option>
                <option value="displayorder">Sıra</option>
            </select>
        </div>
        <div class="col-md-2 d-grid">
            <button class="btn btn-primary">Filtrele</button>
        </div>
    </form>

    <div class="d-flex mb-2">
        <a class="btn btn-success ms-auto" asp-action="Create">Yeni Hizmet</a>
    </div>

    <table class="table table-striped align-middle">
        <thead>
            <tr>
                <th style="width:80px">Sıra</th>
                <th>Başlık</th>
                <th>Slug</th>
                <th>Yayın</th>
                <th class="text-end" style="width:180px">İşlem</th>
            </tr>
        </thead>
        <tbody id="rows">
            @foreach (var p in Model.Items)
            {
                <tr data-id="@p.Id">
                    <td><input type="number" class="form-control form-control-sm order" value="@p.DisplayOrder" /></td>
                    <td>@p.Title</td>
                    <td class="text-truncate" style="max-width:220px">@p.Slug</td>
                    <td><input type="checkbox" class="form-check-input pub" @(p.IsPublished ? "checked" : "") /></td>
                    <td class="text-end">
                        <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@p.Id">Düzenle</a>
                        <form method="post" asp-action="Delete" class="d-inline">
                            <input type="hidden" name="Id" value="@p.Id" />
                            <button class="btn btn-sm btn-outline-danger" onclick="return confirm('Silinsin mi?')">Sil</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var totalPages = (int)Math.Ceiling((double)Model.Total / Model.PageSize);
        var page = Model.Page;
    }
    <nav class="mt-3">
        <ul class="pagination">
            @for (int p = 1; p <= totalPages; p++)
            {
                <li class="page-item @(p==page?"active":"")">
                    <a class="page-link" href="?Page=@p&PageSize=@Model.PageSize">@p</a>
                </li>
            }
        </ul>
    </nav>

    <button id="btnReorder" class="btn btn-secondary mt-2">Sıraları Kaydet</button>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.pub').forEach(cb=>{
          cb.addEventListener('change', async ev=>{
            const tr = ev.target.closest('tr'); const id = tr.dataset.id;
            await fetch('@Url.Action("TogglePublish")',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ id, isPublished: ev.target.checked })});
          });
        });
        document.getElementById('btnReorder').addEventListener('click', async ()=>{
          const items = Array.from(document.querySelectorAll('#rows tr')).map(tr=>({ id: tr.dataset.id, displayOrder: parseInt(tr.querySelector('.order').value||0) }));
          await fetch('@Url.Action("Reorder")',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ items })});
          location.reload();
        });
    </script>
}
